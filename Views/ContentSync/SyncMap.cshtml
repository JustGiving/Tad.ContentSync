@model ContentSync.Models.ContentSyncMap

<tr class="type-@Model.EqualityRank">
    <td class="left">
        @if (Model.Local != null) {
            @Display(Model.Local.Preview)
        }
        @if (Model.Local != null) {
            <a href="#" class="show-inspect">View</a>
            <div style="display: none;" class="inspect-source">
                <h3>Content</h3>
                @Display(Model.Local.DetailShape)
                <br/>
                <h3>Xml</h3>
                <pre>@Model.Local.ItemXml.ToString()</pre>
            
            </div>
        }
    </td>
    <td class="middle">@if (Model.Balanced && Model.Equal)
                       {
                           <text>Same on both</text>
                       }
                       else if (Model.Balanced && !Model.Equal)
                       {
                           if (Model.Remote != null)
                           {
                               <text>Different on remote</text><br/>
                               <select name="action:@Model.Identifier">
                                   <option value="ignore">Ignore</option>
                                   <option value="push:@Model.Remote.DetailShape.Identifier">Update Remote</option>
                               </select>
                           }
                       }
                       else if (!Model.Balanced)
                       {
                           if (Model.Remote == null
                               && Model.Similar != null
                               && Model.Similar.Count() > 0)
                           {
                               <text>Similar content with mismatched IDs</text><br/>
                               <select name="action:@Model.Identifier">
                                   <option value="ignore">Ignore</option>
                                   <option value="push:null">Create on Remote</option>
                                   @foreach (var similar in Model.Similar)
                                   {
                                       <option value="replace:@similar.DetailShape.Identifier()">Replace remote @Display(similar.SummaryShape)</option>
                                   }
                               </select>

                           }
                           else
                           {
                               if (Model.Remote == null && Model.Local != null)
                               {
                       
                                   <text>Local only</text><br/>
                                   <select name="action:@Model.Identifier">
                                       <option value="ignore">Ignore</option>
                                       <option value="push:null">Create on Remote</option>
                                   </select>
                               }
                               else if (Model.Remote != null && Model.Local == null)
                               {
                                   <text>Remote only</text>
                               }
                           }
                       }</td>
    <td class="right">
        @if (Model.Remote != null)
        {
            @Display(Model.Remote.Preview)
        }
        else if (Model.Similar != null)
        {
            foreach (var similar in Model.Similar)
            {
                @Display(similar.Preview)
            }
        }
    @if (Model.Remote != null)
    {
        <a href="#" class="show-inspect">View</a>
        <div style="display: none;" class="inspect-source">
            <h3>Content</h3>
            @Display(Model.Remote.DetailShape)
            <h3>Xml</h3>
            <pre>@Model.Remote.ItemXml.ToString()</pre>
        </div>
    }

    </td>
</tr>
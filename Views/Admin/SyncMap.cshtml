@model Tad.ContentSync.Models.ContentSyncMap

<tr class="type-@Model.EqualityRank">
    <td class="left">
        @if (Model.Local != null)
        {
            @Display(Model.Local.Preview)
        }
        @if (Model.Local != null)
        {
            if (Model.Remote == null && (Model.Similar == null || Model.Similar.Count() == 0))
            {
                <a href="#" class="show-inspect left">View</a>
            }
            <div style="display: none;" class="inspection left" id="@Model.Local.ContentItem.Id"  data-previewurl="@(Model.Local.PreviewUrl)">
                <div class="display">
                    @Display(Model.Local.DetailShape)
                </div>
                <div class="xml">@Html.Raw(Model.Local.ForDiff())</div>
            </div>
        }
    </td>
    <td class="middle"><strong>@Model.ContentType&nbsp;</strong>
        @if (Model.Balanced && Model.Equal)
        {
                  <text>Same on both</text>
        }
        else if (Model.Balanced && !Model.Equal)
        {
            if (Model.Remote != null)
            {
                <select name="action:@Model.Identifier">
                          <option value="ignore">Ignore</option>
                          <option value="push:@Model.Remote.DetailShape.Identifier">Update Remote</option>
                      </select>
            }
        }
        else if (!Model.Balanced)
        {
            if (Model.Remote == null
                && Model.Similar != null
                && Model.Similar.Count() > 0)
            {
                      <text>Similar</text>
                      <select name="action:@Model.Identifier">
                          <option value="ignore">Ignore</option>
                          <option value="push:null">Create on Remote</option>
                          @foreach (var similar in Model.Similar)
                          {
                              <option value="replace:@similar.DetailShape.Identifier()">Replace remote @Display(similar.SummaryShape)</option>
                          }
                      </select>

            }
            else
            {
                if (Model.Remote == null && Model.Local != null)
                {
                       
                          <select name="action:@Model.Identifier">
                              <option value="ignore">Ignore</option>
                              <option value="push:null">Create on Remote</option>
                          </select>
                }
            }
        }
        
        @if (Model.Remote != null)
                {
                    <a href="#" class="show-inspect right">@(Model.Balanced ? "Compare" : "View")</a>
                    <div style="display: none;" class="inspection r" id="@Model.Remote.Identifier"
                         data-localid="@(Model.Balanced ? Model.Local.ContentItem.Id : 0)" data-previewurl="@(Model.Remote.PreviewUrl)">
                        <div class="display">
                            @Display(Model.Remote.DetailShape)
                        </div>
                        <div class="xml">@Html.Raw(Model.Remote.ForDiff())</div>
                    </div>
                }

    </td>
    <td class="right">
        @if (Model.Remote != null)
        {
            @Display(Model.Remote.Preview)
        }
        else if (Model.Similar != null)
        {
            <ul>
            @foreach (var similar in Model.Similar)
            {
                <li>
                    @Display(similar.Preview)
                    <a href="#" class="show-inspect right">Compare</a>
                    <div style="display: none;" class="inspection right" id="@similar.Identifier"
                        data-localid="@(Model.Local != null ? Model.Local.ContentItem.Id : 0)" data-previewurl="@(similar.PreviewUrl)">
                        <div class="display">
                            @Display(similar.DetailShape)
                        </div>
                        <div class="xml">@Html.Raw(similar.ForDiff())</div>
                    </div>
                </li>
            }
            </ul>
        }

    </td>
</tr>